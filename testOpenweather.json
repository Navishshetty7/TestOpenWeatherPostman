{
	"info": {
		"_postman_id": "864f73bc-285c-4564-9a5f-afb73a085008",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14978274"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"lat and ion is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.coord.lat).to.eql(51.51);\r",
							"     pm.expect(jsonData.coord.lon).to.eql(-0.13);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"coord\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"lon\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"lat\": {\r",
							"          \"type\": \"number\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"lon\",\r",
							"        \"lat\"\r",
							"      ]\r",
							"    },\r",
							"    \"weather\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"id\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"main\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"description\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"icon\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"id\",\r",
							"            \"main\",\r",
							"            \"description\",\r",
							"            \"icon\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"base\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"main\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"temp\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"pressure\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"humidity\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"temp_min\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"temp_max\": {\r",
							"          \"type\": \"number\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"temp\",\r",
							"        \"pressure\",\r",
							"        \"humidity\",\r",
							"        \"temp_min\",\r",
							"        \"temp_max\"\r",
							"      ]\r",
							"    },\r",
							"    \"visibility\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"wind\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"speed\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"deg\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"speed\",\r",
							"        \"deg\"\r",
							"      ]\r",
							"    },\r",
							"    \"clouds\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"all\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"all\"\r",
							"      ]\r",
							"    },\r",
							"    \"dt\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"sys\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"type\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"message\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"country\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"sunrise\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"sunset\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"type\",\r",
							"        \"id\",\r",
							"        \"message\",\r",
							"        \"country\",\r",
							"        \"sunrise\",\r",
							"        \"sunset\"\r",
							"      ]\r",
							"    },\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"cod\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"coord\",\r",
							"    \"weather\",\r",
							"    \"base\",\r",
							"    \"main\",\r",
							"    \"visibility\",\r",
							"    \"wind\",\r",
							"    \"clouds\",\r",
							"    \"dt\",\r",
							"    \"sys\",\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"cod\"\r",
							"  ]\r",
							"}\r",
							"var jsonResponse = pm.response.json();\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(jsonResponse, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"cases passed\", () => {\r",
							"  pm.expect(jsonData.main.temp).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"cases passed\", () => {\r",
							"  pm.expect(jsonData.sys.country).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b6 907d289e10d714a6e88b30761fae22.",
					"protocol": "https",
					"host": [
						"samples",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "q",
							"value": "London,uk"
						},
						{
							"key": "appid",
							"value": "b6 907d289e10d714a6e88b30761fae22."
						}
					]
				}
			},
			"response": []
		}
	]
}